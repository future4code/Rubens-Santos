{"version":3,"sources":["Components/Button.js","Components/CriarPlaylist.js","Components/AllPlaylists.js","Components/AddTrack.js","App.js","reportWebVitals.js","index.js"],"names":["StyledButton","styled","button","Button","onClick","this","props","onclick","buttontext","React","Component","StyledInput","input","Wrapper","div","CriarPlaylist","required","placeholder","onChange","value","createPlaylist","PlaylistDisplay","TrackDisplay","PlaylistBox","DeleteButton","Icon","img","TrackBox","PlaylistButton","AllPlaylists","state","clickedname","clickedid","clickedtracks","clicked","playlistarraycopy","playlists","allplaylists","getAll","a","axios","get","headers","Authorization","response","setState","data","result","list","alert","deletePlaylist","delete","id","console","log","renderPlaylists","map","playlist","getAllTracks","name","src","tracks","renderTracks","track","artist","controls","url","type","deleteTrack","Select","select","AddTrack","trackname","trackartist","trackurl","trackid","option","trackNameOnChange","event","target","trackArtistOnChange","trackUrlOnChange","OptionOnChange","createOption","createbutton","addTrackToPlaylist","body","post","then","res","catch","err","MainSection","App","pagecontroller","playlistname","createPlaylistPage","addTrackPage","createOnChange","screenChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79d34402.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledButton = styled.button`\r\n    background-color: #1ED760;\r\n    border-radius: 50px;\r\n    padding: 15px;\r\n    width: 150px;\r\n    margin-right: 30px;\r\n    border: solid;\r\n    font-weight: bold;\r\n    color: #2941AB;\r\n    border-color: #1ED760;\r\n    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\r\n\r\n    :hover{\r\n        border-color: goldenrod;\r\n    }\r\n    :active{\r\n        border-color:#1ED760;\r\n    }\r\n`\r\n\r\nclass Button extends React.Component{\r\n    render(){\r\n        return(\r\n            <StyledButton onClick={this.props.onclick}>{this.props.buttontext}</StyledButton>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\n\r\n\r\nconst StyledInput = styled.input`\r\n    padding: 3px;\r\n    border-radius: 10px;\r\n    border: solid;\r\n    text-align: center;\r\n    margin-bottom: 10px;\r\n\r\n    :focus{\r\n        outline: none;\r\n    }\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`\r\n\r\nclass CriarPlaylist extends React.Component{\r\n\r\n   \r\n    render(){\r\n         \r\n  \r\n        return(\r\n            <Wrapper>\r\n            <h3>Criar Playlist</h3>\r\n            <StyledInput required placeholder='Nome da Playlist' onChange={this.props.onChange} value={this.props.value}/>\r\n            <button onClick={this.props.createPlaylist}>Criar</button>\r\n            </Wrapper>\r\n           )\r\n    }\r\n}\r\n\r\n\r\nexport default CriarPlaylist","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    \r\n`\r\n\r\nconst PlaylistDisplay = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`\r\n\r\nconst TrackDisplay = styled.div`\r\n    height: 100%;\r\n    margin-left: 5%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 300px;\r\n    \r\n\r\n`\r\n\r\nconst PlaylistBox = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst DeleteButton = styled.button`\r\n    background-color: #2941AB;\r\n`\r\nconst Icon = styled.img`\r\n    width: 20px;\r\n`\r\n\r\nconst TrackBox = styled.div`\r\n`\r\n\r\nconst PlaylistButton = styled.button`\r\n    width: 250px;\r\n    background-color: #2941AB;\r\n`\r\n\r\nclass AllPlaylists extends React.Component {\r\n    state = {\r\n        clickedname: ' ',\r\n        clickedid: ' ',\r\n        clickedtracks: [],\r\n        clicked: false,\r\n        playlistarraycopy: [this.props.playlists],\r\n        allplaylists: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        return this.getAll();\r\n    }\r\n\r\n    getAll = async () => {\r\n        try {\r\n            const response = await axios.get('https://us-central1-labenu-apis.cloudfunctions.net/labefy/playlists', {\r\n                headers: {\r\n                    Authorization: \"rubens-santos-johnson\"\r\n                }\r\n            })\r\n\r\n            this.setState({\r\n                allplaylists: response.data.result.list\r\n            })\r\n\r\n        } catch (error) {\r\n            alert('Ocorreu um erro')\r\n        }\r\n\r\n    }\r\n\r\n    deletePlaylist = async (props) => {\r\n        try {\r\n            const response = await axios.delete(`https://us-central1-labenu-apis.cloudfunctions.net/labefy/playlists/${props.id}`, {\r\n                headers: {\r\n                    Authorization: \"rubens-santos-johnson\"\r\n                }\r\n            })\r\n            this.getAll()\r\n            alert('Playlist Apagada')\r\n        } catch (error) {\r\n            alert('Ocorreu um erro')\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    renderPlaylists = () =>\r\n        this.state.allplaylists.map((playlist) => {\r\n            return (\r\n                <PlaylistBox key={playlist.id}>\r\n                    <PlaylistButton onClick={() => this.getAllTracks(playlist)}>\r\n                        <p>{playlist.name}</p>\r\n                    </PlaylistButton>\r\n                    <DeleteButton onClick={() => this.deletePlaylist(playlist)}><Icon src=\"https://img.icons8.com/ios/100/000000/delete--v1.png\" /></DeleteButton>\r\n                </PlaylistBox>\r\n            )\r\n        })\r\n\r\n\r\n    getAllTracks = async (playlist) => {\r\n        try {\r\n            const response = await axios.get(`https://us-central1-labenu-apis.cloudfunctions.net/labefy/playlists/${playlist.id}/tracks`, {\r\n                headers: {\r\n                    Authorization: \"rubens-santos-johnson\"\r\n                }\r\n            })\r\n\r\n            this.setState({\r\n                clickedname: playlist.name,\r\n                clickedid: playlist.id,\r\n                clicked: true,\r\n                clickedtracks: response.data.result.tracks\r\n            })\r\n        } catch (error) {\r\n            alert('Ocorreu um erro')\r\n        }\r\n\r\n    }\r\n\r\n    renderTracks = () =>\r\n        this.state.clickedtracks.map((track) => {\r\n            return (\r\n                <TrackBox>\r\n                    <p>Nome:{track.name}</p>\r\n                    <p>Artista:{track.artist}</p>\r\n                    <audio controls>\r\n                        <source src={track.url} type='audio/mp3' />\r\n                    </audio>\r\n                    <button onClick={() => this.deleteTrack(track)}>Apagar</button>\r\n                </TrackBox>\r\n            )\r\n        })\r\n\r\n    deleteTrack = async (track) => {\r\n        try {\r\n            const response = await axios.delete(`https://us-central1-labenu-apis.cloudfunctions.net/labefy/playlists/${this.state.clickedid}/tracks/${track.id}`, {\r\n                headers: {\r\n                    Authorization: \"rubens-santos-johnson\"\r\n                }\r\n            })\r\n            alert('Música Apagada,atualize a página.')\r\n        } catch (error) {\r\n            alert('Ocorreu um erro')\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Wrapper>\r\n                <PlaylistDisplay>\r\n                    <h3>Todas as playlists</h3>\r\n                    {this.renderPlaylists()}\r\n                </PlaylistDisplay>\r\n                <TrackDisplay>\r\n                    <h3>{this.state.clickedname}</h3>\r\n                    {this.renderTracks()}\r\n                </TrackDisplay>\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllPlaylists","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n\r\nconst Select = styled.select`\r\n    width: 250px;\r\n    margin-bottom: 20px;\r\n    padding: 10px;\r\n    border-radius: 20px;\r\n\r\n    :focus{\r\n        outline: none;\r\n    }\r\n\r\n`\r\nclass AddTrack extends React.Component {\r\n    state = {\r\n        trackname: '',\r\n        trackartist: '',\r\n        trackurl: '',\r\n        trackid: '',\r\n        allplaylists: [],\r\n        option: 'Escolha a Playlist'\r\n\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        return this.getAll()\r\n    }\r\n\r\n\r\n    trackNameOnChange = (event) => {\r\n        this.setState({ trackname: event.target.value })\r\n    }\r\n\r\n    trackArtistOnChange = (event) => {\r\n        this.setState({ trackartist: event.target.value })\r\n    }\r\n\r\n    trackUrlOnChange = (event) => {\r\n        this.setState({ trackurl: event.target.value })\r\n    }\r\n\r\n    OptionOnChange = (event) => {\r\n        this.setState({ option: event.target.value })\r\n\r\n    }\r\n\r\n\r\n    createOption = () =>\r\n        this.state.allplaylists.map((list) => {\r\n            return (\r\n                <option key={list.id} id={list.id}>{list.name}</option>\r\n\r\n            )\r\n        })\r\n\r\n    createbutton = () =>\r\n        this.state.allplaylists.map((list) => {\r\n            if (list.name === this.state.option) {\r\n                return (\r\n                    <div>\r\n                        <button onClick={() => this.addTrackToPlaylist(list)}>Adicionar</button>\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n\r\n    addTrackToPlaylist = (props) => {\r\n        const url = `https://us-central1-labenu-apis.cloudfunctions.net/labefy/playlists/${props.id}/tracks`\r\n        const body = {\r\n            name: this.state.trackname,\r\n            artist: this.state.trackartist,\r\n            url: this.state.trackurl\r\n        }\r\n\r\n\r\n        axios.post(url, body, {\r\n            headers: {\r\n                Authorization: \"rubens-santos-johnson\"\r\n            }\r\n        })\r\n\r\n            .then((res) => {\r\n                console.log('funcionou')\r\n                this.setState({\r\n                    trackname: '',\r\n                    trackartist: '',\r\n                    trackurl: '',\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n                console.log(this.state.trackid)\r\n            })\r\n    }\r\n\r\n    getAll = async () => {\r\n        try {\r\n            const response = await axios.get('https://us-central1-labenu-apis.cloudfunctions.net/labefy/playlists', {\r\n                headers: {\r\n                    Authorization: \"rubens-santos-johnson\"\r\n                }\r\n            })\r\n\r\n            this.setState({\r\n                allplaylists: response.data.result.list\r\n            })\r\n\r\n        } catch (error) {\r\n            alert('Ocorreu um erro')\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            <Wrapper>\r\n                <Select onChange={this.OptionOnChange}>\r\n                    <option>{this.state.option}</option>\r\n                    {this.createOption()}\r\n                </Select>\r\n\r\n                <input required placeholder='Nome da Música' onChange={this.trackNameOnChange} value={this.state.trackname} />\r\n                <input required placeholder='Artista' onChange={this.trackArtistOnChange} value={this.state.trackartist} />\r\n                <input required placeholder='Url' onChange={this.trackUrlOnChange} value={this.state.trackurl} />\r\n                {this.createbutton()}\r\n\r\n\r\n\r\n\r\n            </Wrapper>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AddTrack","import React from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport Button from './Components/Button'\nimport CriarPlaylist from './Components/CriarPlaylist'\nimport AllPlaylists from './Components/AllPlaylists'\nimport AddTrack from './Components/AddTrack'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100vh;\n  background-color: #2941AB;\n`\n\nconst MainSection = styled.div`\n  margin-top: 40px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height:300px\n`\nclass App extends React.Component {\n  state = {\n    pagecontroller: 1,\n    playlistname: '',\n    allplaylists: [],\n    \n  }\n\n\n  createPlaylistPage = () => {\n    this.setState({\n      pagecontroller: 1\n    })\n  }\n\n\n  playlists = () => {\n    this.setState({\n      pagecontroller: 2\n    })\n  }\n\n  addTrackPage = () => {\n    this.setState({\n      pagecontroller: 3\n    })\n  }\n\n  createOnChange = (event) => {\n    this.setState({\n      playlistname: event.target.value\n    })\n  }\n\n  \n\n  // getAllPlaylists = () => {\n  //   const url = 'https://us-central1-labenu-apis.cloudfunctions.net/labefy/playlists'\n\n  //   axios.get(url, {\n  //     headers: {\n  //       Authorization: \"rubens-santos-johnson\"\n  //     }\n  //   })\n\n  //     .then((res) => {\n  //       this.setState({\n  //         allplaylists: res.data.result.list\n  //       })\n\n  //     })\n  //     .catch((err) => {\n  //       console.log(err)\n  //       alert('Ocorreu um erro')\n  //     })\n  // }\n\n  \n\n  createPlaylist = () => {\n      const url = \"https://us-central1-labenu-apis.cloudfunctions.net/labefy/playlists\"\n      const body = {\n        name: this.state.playlistname\n      }\n\n      axios.post(url, body, {\n        headers: {\n          Authorization: 'rubens-santos-johnson'\n        }\n      })\n\n        .then((res) => {\n          alert('Playlist Criada')\n        })\n        .catch((err) => {\n          console.log(err)\n          alert('Ocorreu um erro')\n        })\n    }\n\n\n    screenChange = () => {\n      switch (this.state.pagecontroller) {\n        case 1:\n          return (\n\n            <CriarPlaylist\n              onChange={this.createOnChange}\n              createPlaylist={this.createPlaylist}\n              value={this.state.name}\n            />\n          )\n\n        case 2:\n\n          return (\n\n            <AllPlaylists\n              url=\"https://us-central1-labenu-apis.cloudfunctions.net/labefy/playlists\"\n              name={this.state.name}\n            />\n          )\n\n        case 3:\n          return (\n\n            <AddTrack\n\n            />\n          )\n      }\n    }\n\n\n    render() {\n      return (\n        <Wrapper>\n        \n          <div>\n            <Button buttontext='Criar Playlist' onclick={this.createPlaylistPage} />\n            <Button buttontext='Todas as Playlists' onclick={this.playlists} />\n            <Button buttontext='Adicionar ' onclick={this.addTrackPage} />\n          </div>\n\n          <MainSection>\n            {this.screenChange()}\n          </MainSection>\n        </Wrapper>\n\n      )\n    }\n  }\n\n\n  export default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}